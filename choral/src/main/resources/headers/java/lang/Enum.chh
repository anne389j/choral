/* Choral Header Version 0.1 */
package java.lang;

import java.io.Serializable;

public abstract class Enum@A<T@A extends Enum@A<T>> implements Serializable@A, Comparable@A<T> {

    public final String@A name() {  }

    public final int@A ordinal() {  }

    protected Enum(String@A name, int@A ordinal) {  }

    public String@A toString() {  }

    public final boolean@A equals(Object@A other) {  }

    public final int@A hashCode() {  }

    protected final Object@A clone() /* throws CloneNotSupportedException */ {  }

    public final int@A compareTo(T@A o) {  }

    public final Class@A<T> getDeclaringClass() {  }

    public static <T@A extends Enum@A<T>> T@A valueOf(Class@A<T> enumType, String@A name) {  }

    protected final void finalize() { }

    /* private void readObject(ObjectInputStream@A in) throws IOException@A, ClassNotFoundException@A {  } */

    private void readObjectNoData() /* throws ObjectStreamException */ {  }
}